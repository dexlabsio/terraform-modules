AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Dex Cloudformation template for creating resources for Athena and Glue setup.
  The template creates:
   2 buckets for Athena operations;
   2 Athena Workgroups named: dex-dbt-sql-prod and dex-dbt-sql-dev;
   2 roles and policies that allow role assumption and control over the created S3, Athena and Glue resources;
   A user named dex-automation with DexAutomationPolicy and a pair of access keys.

Parameters:
  InstallationID:
    Type: String
    Description: Unique installation ID generated by deX.
    AllowedPattern: "^[a-z0-9-]+$"
    ConstraintDescription: "InstallationID must contain only lowercase letters and numbers."

  CreateDexUser:
    Type: String
    Description: Whether to create the dex-automation user and its access keys.
    AllowedValues: ["True", "False"]
    Default: "True"

Resources:
  AthenaResultsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "dex-athena-results-${InstallationID}"
      AccessControl: Private
      Tags:
        - Key: Name
          Value: Dex Athena Results Bucket
        - Key: Cloudformation
          Value: true
        - Key: Owner
          Value: deX

  DexLakehouseBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "dex-lakehouse-${InstallationID}"
      AccessControl: Private
      Tags:
        - Key: Name
          Value: Dex Athena Lakehouse Bucket
        - Key: Cloudformation
          Value: true
        - Key: Owner
          Value: deX

  AthenaSparkRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      RoleName: deXAthenaSparkRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: "athena.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: AthenaSparkPermissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "s3:*"
                Resource:
                  - !GetAtt AthenaResultsBucket.Arn
                  - !Sub "${AthenaResultsBucket.Arn}/*"
                  - !GetAtt DexLakehouseBucket.Arn
                  - !Sub "${DexLakehouseBucket.Arn}/*"
              - Effect: Allow
                Action: "glue:*"
                Resource: "*"
              - Effect: Allow
                Action:
                  - athena:GetWorkGroup
                  - athena:TerminateSession
                  - athena:GetSession
                  - athena:GetSessionStatus
                  - athena:ListSessions
                  - athena:StartCalculationExecution
                  - athena:GetCalculationExecutionCode
                  - athena:StopCalculationExecution
                  - athena:ListCalculationExecutions
                  - athena:GetCalculationExecution
                  - athena:GetCalculationExecutionStatus
                  - athena:ListExecutors
                  - athena:ExportNotebook
                  - athena:UpdateNotebook
                Resource: !Sub "arn:aws:athena:${AWS::Region}:${AWS::AccountId}:workgroup/*"
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:DescribeLogStreams
                  - logs:CreateLogGroup
                  - logs:PutLogEvents
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws-athena:*"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws-athena*:log-stream:*"
              - Effect: Allow
                Action: "logs:DescribeLogGroups"
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*"
              - Effect: Allow
                Action: "cloudwatch:PutMetricData"
                Resource: "*"
                Condition:
                  StringEquals:
                    cloudwatch:namespace: "AmazonAthenaForApacheSpark"

  GlueCrawlerRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      RoleName: deXGlueCrawlerRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: "glue.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: GlueCrawlerPermissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:PutObject"
                Resource: !Sub "${DexLakehouseBucket.Arn}/*"
              - Effect: Allow
                Action:
                  - glue:*
                  - s3:GetBucketLocation
                  - s3:ListBucket
                  - s3:ListAllMyBuckets
                  - s3:GetBucketAcl
                  - iam:ListRolePolicies
                  - iam:GetRole
                  - iam:GetRolePolicy
                  - cloudwatch:PutMetricData
                Resource: "*"
              - Effect: Allow
                Action: "s3:CreateBucket"
                Resource: "arn:aws:s3:::aws-glue-*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                Resource:
                  - "arn:aws:s3:::aws-glue-*/*"
                  - "arn:aws:s3:::*/*aws-glue-*/*"
              - Effect: Allow
                Action: "s3:GetObject"
                Resource:
                  - "arn:aws:s3:::crawler-public*"
                  - "arn:aws:s3:::aws-glue-*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub "arn:aws:logs:*:*:*:/aws-glue/*"

  DexAutomationRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      RoleName: deXAutomationRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: "sts:AssumeRole"
            Principal:
              AWS: "arn:aws:iam::601697184715:root"

  DexAutomationPolicy:
    Type: AWS::IAM::Policy
    DeletionPolicy: Delete
    Properties:
      PolicyName: DexAutomationPolicy
      Roles:
        - !Ref DexAutomationRole
      Users:
        - !Ref DexAutomationUser
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: "iam:PassRole"
            Resource:
              - !GetAtt AthenaSparkRole.Arn
              - !GetAtt GlueCrawlerRole.Arn
          - Effect: Allow
            Action: "iam:GetRole"
            Resource: "*"
          - Effect: Allow
            Action:
              - s3:ListAllMyBuckets
              - s3:ListBucket
            Resource: "*"
          - Effect: Allow
            Action: "s3:*"
            Resource:
              - !GetAtt DexLakehouseBucket.Arn
              - !Sub "${DexLakehouseBucket.Arn}/*"
              - !GetAtt AthenaResultsBucket.Arn
              - !Sub "${AthenaResultsBucket.Arn}/*"
          - Effect: Allow
            Action:
              - athena:*
              - glue:*
            Resource: "*"
          - Effect: Allow
            Action: "logs:DescribeLogGroups"
            Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*"
          - Effect: Allow
            Action:
              - logs:Describe*
              - logs:Get*
              - logs:List*
              - logs:StartQuery
              - logs:StopQuery
              - logs:TestMetricFilter
              - logs:FilterLogEvents
              - logs:StartLiveTail
              - logs:StopLiveTail
              - cloudwatch:GenerateQuery
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws-athena:*"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws-glue:*"

  AthenaWorkGroupProd:
    Type: AWS::Athena::WorkGroup
    DeletionPolicy: Delete
    Properties:
      Name: "dex-dbt-sql-prod"
      WorkGroupConfiguration:
        ResultConfiguration:
          OutputLocation: !Sub "s3://${AthenaResultsBucket}/prod/"
        EnforceWorkGroupConfiguration: false

  AthenaWorkGroupDev:
    Type: AWS::Athena::WorkGroup
    DeletionPolicy: Delete
    Properties:
      Name: "dex-dbt-sql-dev"
      WorkGroupConfiguration:
        ResultConfiguration:
          OutputLocation: !Sub "s3://${AthenaResultsBucket}/dev/"
        EnforceWorkGroupConfiguration: false

  DexAutomationUser:
    Condition: CreateDexUserCondition
    DeletionPolicy: Delete
    Type: AWS::IAM::User
    Properties:
      UserName: dex-automation

  DexAutomationAccessKey:
    Condition: CreateDexUserCondition
    DeletionPolicy: Delete
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref DexAutomationUser

Conditions:
  CreateDexUserCondition: !Equals [!Ref CreateDexUser, "True"]

Outputs:
  AthenaResultsBucketName:
    Description: Name of the Athena Results bucket
    Value: !Ref AthenaResultsBucket

  DexLakehouseBucketName:
    Description: Name of the Dex Lakehouse bucket
    Value: !Ref DexLakehouseBucket

  AthenaWorkGroupName:
    Description: Name of the Athena WorkGroup Prod
    Value: !Ref AthenaWorkGroupProd

  AthenaWorkGroupName:
    Description: Name of the Athena WorkGroup Dev
    Value: !Ref AthenaWorkGroupProd

  DexAutomationAccessKeyId:
    Condition: CreateDexUserCondition
    Description: Access Key ID for the dex-automation user
    Value: !Ref DexAutomationAccessKey

  DexAutomationSecretAccessKey:
    Condition: CreateDexUserCondition
    Description: Secret Access Key for the dex-automation user
    Value: !GetAtt DexAutomationAccessKey.SecretAccessKey
